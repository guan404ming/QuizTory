import type { Metadata } from "next";
import { Noto_Sans } from "next/font/google";

import { eq, desc } from "drizzle-orm";
import { User } from "lucide-react";

import Header from "@/components/Header";
import TimeText from "@/components/Timetext";
import { Alert, AlertTitle, AlertDescription } from "@/components/ui/alert";
import { Separator } from "@/components/ui/separator";
import { Toaster } from "@/components/ui/toaster";
import NextAuthProvider from "@/context/NextAuthProvider";
import { db } from "@/db";
import { announcementTable, userTable } from "@/db/schema";

import "./globals.css";

const noto = Noto_Sans({
  subsets: ["latin-ext"],
  weight: ["400", "700"],
  variable: "--noto-sans",
});

export const metadata: Metadata = {
  title: "quiztory",
  description: "Generated by create next app",
  icons: "/favicon.ico",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const announcementData = await db
    .select({
      id: announcementTable.id,
      content: announcementTable.content,
      createdAt: announcementTable.createdAt,
      username: userTable.name,
    })
    .from(announcementTable)
    .innerJoin(userTable, eq(announcementTable.userId, userTable.id))
    .orderBy(desc(announcementTable.createdAt))
    .limit(5)
    .execute();

  return (
    <html lang="en">
      <NextAuthProvider>
        <body className={noto.className}>
          <div className="mx-auto flex max-w-6xl">
            <Header />
            <main className="flex min-h-screen w-full">
              <Separator orientation="vertical" />
              <div className="mt-5 w-full">{children}</div>

              <Separator orientation="vertical" />
              <div className="mt-3">
                <h1 className="flex items-center space-x-2 bg-white px-4 py-4 pt-5 text-lg font-semibold">
                  <p>Announcement</p>
                </h1>
                <div className="px-4">
                  {announcementData.map((announcement) => (
                    <Alert
                      key={announcement.id}
                      className="mb-3 min-w-[200px] align-middle drop-shadow-sm"
                    >
                      <User className="ml-1 h-5 w-5" />
                      <AlertTitle className="mb-3 ml-2">
                        {announcement.content}
                      </AlertTitle>
                      <AlertDescription className="ml-2 text-xs text-gray-500">
                        @ {announcement.username}
                        <p>
                          <TimeText
                            date={announcement.createdAt}
                            format="MM/DD h:mm A"
                          />
                        </p>
                      </AlertDescription>
                    </Alert>
                  ))}
                </div>
              </div>
            </main>
          </div>
          <Toaster />
        </body>
      </NextAuthProvider>
    </html>
  );
}
